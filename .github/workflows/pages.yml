name: Deploy site to Pages

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Sphinx documentation and Special Badges
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.14.0-rc.2
        uses: actions/setup-python@v5
        with:
          python-version: 3.14.0-rc.2

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Build the sphinx documentation
        run: |
          cd docs
          uv run sphinx-build . _build

      - name: Generate reports
        run: |
          mkdir -p reports
          uv run pytest --cov=tdom_sphinx --cov-report=xml:reports/coverage.xml --cov-report=term --cov-report=html:reports/coverage --junitxml=reports/pytest.xml --html=reports/pytest.html

      - name: Generate badges
        run: |
          uv run genbadge tests -i reports/pytest.xml -v -o reports/pytest.svg
          uv run genbadge coverage -i reports/coverage.xml -v -o reports/coverage.svg

      - name: Move reports to docs/_build
        run: |
          mv reports docs/_build/

      - name: Upload artifact to pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
